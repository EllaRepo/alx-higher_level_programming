The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing ``add_integer`` from the ``0-add_integer`` module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 2 and 3
    >>> add_integer(2, 3)
    5

Adding -3 and 5
    >>> add_integer(-3, 5)
    2

Adding 2.5 and 3.5
    >>> add_integer(2.5, 3.5)
    5

Adding 10 and default value of second integer
    >>> add_integer(10)
    108

Adding string "3" and 2.5
    >>> add_integer("3", 2.5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer([1, 2], 2.5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer((1, 4), 2.5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(100, [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(34, (1, 4))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(float('inf'), 1)
    Traceback (most recent call last):
    	...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(-1, float('inf'))
    Traceback (most recent call last):
    	...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(2.5, "3")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(float('nan'), 3)
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer
