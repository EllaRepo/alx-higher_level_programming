The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing ``matrix_divided`` from the ``2-matrix_divided`` module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix_divided([[1, 2], [3, 4]], 2)
    [[0.5, 1.0], [1.5, 2.0]]
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero
    >>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
    [[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]
    >>> matrix_divided([], 67)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided((89, 75, 45), 15)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[125, 734], [8.68, 3.8, -20, -2], [-96]], 9)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix_divided([[2, 4], [6.8], [10, 12]], 12)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix_divided([["HI", "ALX"], ["HI", "Python"]], 10)
    Traceback (most recent call last):
     	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([["19"], ["12", "23"], ["35", "46", "57"]], 20)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[2.7, 4], ['6', 8.4], [10.1, '12'], [5.3, '10.2', 15.8]], 5)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[5.1, 7.8], [], [10, -3]], 8)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[1, -1], (2, -2), [3, -3]], 1)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[5.7, 8.1], [7.7, 4.9]], [2])
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number
    >>> matrix_divided([[10, 50], [30, 20]], "10")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number
    >>> matrix_divided([[10, 50], [30, 20]], (10, ))
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number
    >>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
    [[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    >>> matrix_divided([[1, 2], [3, '4']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([[1, 2], [3]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix_divided([[1, 2], [3]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
    >>> matrix_divided()
    Traceback (most recent call last):
    	...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
